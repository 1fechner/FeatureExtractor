package de.uni.hamburg.swk.extractor.gui.form;

import org.eclipse.swt.SWT;
import org.eclipse.swt.custom.StyledText;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Combo;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Dialog;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Event;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.Link;
import org.eclipse.swt.widgets.Listener;
import org.eclipse.swt.widgets.MessageBox;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Table;
import org.eclipse.swt.widgets.TableColumn;
import org.eclipse.swt.widgets.Text;
import org.eclipse.wb.swt.SWTResourceManager;

import de.uni.hamburg.swk.extractor.database.dao.impl.TechnologySolutionDAO;
import de.uni.hamburg.swk.extractor.database.entities.ak.TechnologySolution;
import de.uni.hamburg.swk.extractor.gui.controller.KnowledgeBaseTechnologiesEditController;
import de.uni.hamburg.swk.extractor.gui.controller.KnowledgeBaseTechnologyFeatureEditController;
import de.uni.hamburg.swk.extractor.gui.controller.MessageController;

public class FormEditTechnologies extends Dialog
{
    private KnowledgeBaseTechnologiesEditController _technologyEditController;
    private KnowledgeBaseTechnologyFeatureEditController _technologyFeatureEditController;

    protected Object result;
    protected Shell shell;
    private Table table;
    private Text textName;
    private Combo comboDependsOn;

    /**
     * Create the dialog.
     * 
     * @param parent
     * @param style
     */
    public FormEditTechnologies(Shell parent, int style)
    {
        super(parent, style);
        setText("Edit Architectural Knowledge (Technologies)");
    }

    /**
     * Open the dialog.
     * 
     * @return the result
     */
    public Object open()
    {
        createContents();
        shell.open();
        shell.layout();
        Display display = getParent().getDisplay();

        loadAK();

        while (!shell.isDisposed())
        {
            if (!display.readAndDispatch())
            {
                display.sleep();
            }
        }
        return result;
    }

    /**
     * Create contents of the dialog.
     */
    private void createContents()
    {
        shell = new Shell(getParent(), getStyle());
        shell.setSize(939, 652);
        shell.setText(getText());

        Button btnSave = new Button(shell, SWT.NONE);
        btnSave.addSelectionListener(new SelectionAdapter()
        {
            @Override
            public void widgetSelected(SelectionEvent arg0)
            {
                _technologyEditController.save();
            }
        });
        btnSave.setImage(SWTResourceManager.getImage("resources/ak_save.ico"));
        btnSave.setBounds(731, 604, 94, 36);
        btnSave.setText("Save");

        Button btnCancel = new Button(shell, SWT.NONE);
        btnCancel.addSelectionListener(new SelectionAdapter()
        {
            @Override
            public void widgetSelected(SelectionEvent arg0)
            {
                if (!_technologyEditController.hasChanges())
                    shell.close();
                else
                {
                    int res = MessageController
                            .showMessage("Save Changes?", "You have unsaved changes.\nDo you want to save them?",
                                    SWT.ICON_WARNING | SWT.NO | SWT.YES);

                    if (res == SWT.YES)
                    {
                        _technologyEditController.save();
                        shell.close();
                    }
                }
            }
        });
        btnCancel.setBounds(831, 604, 94, 36);
        btnCancel.setText("Cancel");

        Label lblStatus = new Label(shell, SWT.NONE);
        lblStatus.setBounds(10, 604, 715, 36);
        lblStatus.setText("");

        Composite composite = new Composite(shell, SWT.BORDER);
        composite.setBounds(10, 406, 915, 192);

        textName = new Text(composite, SWT.BORDER);
        textName.setBounds(103, 10, 379, 37);

        Button btnCheckEnabled = new Button(composite, SWT.CHECK);
        btnCheckEnabled.setBounds(488, 53, 46, 24);

        comboDependsOn = new Combo(composite, SWT.NONE);
        comboDependsOn.setBounds(103, 53, 271, 37);

        Label lblName = new Label(composite, SWT.NONE);
        lblName.setBounds(10, 10, 69, 20);
        lblName.setText("Name");

        Label lblDescription = new Label(composite, SWT.NONE);
        lblDescription.setBounds(488, 10, 79, 20);
        lblDescription.setText("Description");

        Label lblDependson = new Label(composite, SWT.NONE);
        lblDependson.setBounds(10, 57, 87, 20);
        lblDependson.setText("DependsOn");

        StyledText styledTextDescription = new StyledText(composite, SWT.BORDER | SWT.WRAP);
        styledTextDescription.setBounds(573, 10, 332, 172);

        Label lblEnabled = new Label(composite, SWT.NONE);
        lblEnabled.setBounds(431, 53, 51, 20);
        lblEnabled.setText("Enabled");

        Button btnSaveTech = new Button(composite, SWT.NONE);
        btnSaveTech.addSelectionListener(new SelectionAdapter()
        {
            @Override
            public void widgetSelected(SelectionEvent arg0)
            {
                String n = comboDependsOn.getItems()[comboDependsOn.getSelectionIndex()];
                TechnologySolution dependency = new TechnologySolutionDAO().getByName(n);
                
                _technologyEditController.saveCurrentSelection(textName.getText(),
                        (TechnologySolution) ,
                        btnCheckEnabled.getEnabled(), styledTextDescription.getText());
            }
        });
        btnSaveTech.setImage(SWTResourceManager.getImage("resources/save.ico"));
        btnSaveTech.setBounds(373, 146, 94, 36);
        btnSaveTech.setText("Save");

        Button btnDelete = new Button(composite, SWT.NONE);
        btnDelete.setImage(SWTResourceManager.getImage("resources/technology_delete.ico"));
        btnDelete.setBounds(473, 146, 94, 36);
        btnDelete.setText("Delete");

        Button btnEditFeatures = new Button(composite, SWT.NONE);
        btnEditFeatures.addSelectionListener(new SelectionAdapter()
        {
            @Override
            public void widgetSelected(SelectionEvent arg0)
            {
                _technologyFeatureEditController.edit(shell, _technologyEditController.getCurrentSelection());
            }
        });
        btnEditFeatures.setImage(SWTResourceManager.getImage("resources/tech_feature.ico"));
        btnEditFeatures.setBounds(10, 146, 143, 36);
        btnEditFeatures.setText("Edit Features");

        Link linkCreateDepended = new Link(composite, SWT.NONE);
        linkCreateDepended.addSelectionListener(new SelectionAdapter()
        {
            @Override
            public void widgetSelected(SelectionEvent arg0)
            {
                System.out.println("Click");
            }
        });
        linkCreateDepended.setBounds(10, 94, 87, 20);
        linkCreateDepended.setText("<a>Create Child</a>");

        Link link = new Link(composite, 0);
        link.addSelectionListener(new SelectionAdapter()
        {
            @Override
            public void widgetSelected(SelectionEvent arg0)
            {
                System.out.println("Click2");
            }
        });
        link.setText("<a>Create Technology Feature</a>");
        link.setBounds(10, 120, 187, 20);

        Button btnNewTechnology = new Button(shell, SWT.NONE);
        btnNewTechnology.setImage(SWTResourceManager.getImage("resources/technology_add.ico"));
        btnNewTechnology.setBounds(10, 6, 155, 36);
        btnNewTechnology.setText("New Technology");

        table = new Table(shell, SWT.BORDER | SWT.FULL_SELECTION);
        table.setBounds(10, 48, 915, 352);
        table.setHeaderVisible(true);
        table.setLinesVisible(true);
        table.addListener(SWT.Selection, new Listener()
        {
            public void handleEvent(Event e)
            {
                _technologyEditController.showTechnology(table.getSelection(), textName, comboDependsOn,
                        btnCheckEnabled, styledTextDescription);
            }
        });

        TableColumn tblclmnName = new TableColumn(table, SWT.LEAD);
        tblclmnName.setWidth(100);
        tblclmnName.setText("Name");

        TableColumn tblclmnName_1 = new TableColumn(table, SWT.NONE);
        tblclmnName_1.setWidth(100);
        tblclmnName_1.setText("Description");

        TableColumn tblclmnDependsOn = new TableColumn(table, SWT.NONE);
        tblclmnDependsOn.setWidth(100);
        tblclmnDependsOn.setText("DependsOn");

        TableColumn tblclmnEnabled = new TableColumn(table, SWT.NONE);
        tblclmnEnabled.setWidth(25);
        tblclmnEnabled.setResizable(false);
        tblclmnEnabled.setText("Enabled");

        // Prevent closing
        shell.addListener(SWT.Traverse, new Listener()
        {
            public void handleEvent(Event e)
            {
                if (e.detail == SWT.TRAVERSE_ESCAPE)
                {
                    e.doit = false;
                }
            }
        });
    }

    private void loadAK()
    {
        _technologyEditController = new KnowledgeBaseTechnologiesEditController();
        _technologyFeatureEditController = new KnowledgeBaseTechnologyFeatureEditController();
        _technologyEditController.load(table);
    }
}
